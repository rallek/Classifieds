application Classifieds {
	documentation "With classifieds you can manage your own market."
	vendor Rallek
	author "Ralf Koester"
	email "ralf@familie-koester.de"
	url "http://support.zikula.de"
	version "0.3.0"
	prefix clfs
	modelPath ""
	generatorSettings {
		settingsContainer targetCoreVersion ZK136
		generateMailzApi false
		generateListBlock true
		generateModerationBlock false
		generateListContentType true
		generateDetailContentType false
		generateNewsletterPlugin false
		generateModerationPanel false
		generatePendingContentSupport false
		generateScribitePlugins false
		generateRssTemplates false
		generateAtomTemplates false
		generateCsvTemplates false
		generateXmlTemplates false
		generateJsonTemplates false
		generateKmlTemplates false
		generateOnlyBaseClasses false
		generateTests false
		skipFiles "README.md,CHANGELOG.md"
	}
	modelLayer {
		modelContainer Model {
			numExampleRows 0
			entities {
				entity classified leading categorisable categorisableMultiSelection {
					documentation "a module for goods you want to sell or you want to buy"
					nameMultiple classifieds
					displayPattern "#kind#: #title#"
					hasArchive true
					hasTray true
					ownerPermission true
					fields {
						string title {
							defaultValue ""
						},
						list kind  {
							items {
								default listItem offer ( offer ),
								listItem search ( search ),
								listItem exchange ( exchange )
							}
						},
						text description {
							documentation "the description of your offer or what you are looking for"
							defaultValue ""
						},
						decimal price  currency {
							documentation "The price you are willing to pay or what you want to get for your offer"
							defaultValue ""
							mandatory false
						},
						email ^email {
							documentation "the contact to your classified"
							mandatory true
						},
						string fon {
							documentation "your phone number for requests. It will be shown public."
							defaultValue ""
							mandatory false
						},
						upload picture {
							documentation "a picture oft your classified"
							defaultValue ""
							mandatory false
							subFolderName clsf_pict
							allowedFileSize 102400
						},
						upload picture2 {
							documentation "you can add another picture"
							mandatory false
							subFolderName clsf_pict
							allowedFileSize 102400
						},
						datetime classifiedStart  startDate {
							documentation "the date when your classified should appear. Normaly right now."
							defaultValue now
							mandatory false
							timestampable CREATE
						},
						datetime classifiedEnd  future endDate {
							documentation "the date when the classified shoud stop. This will be set automatically."
							defaultValue ""
						},
						boolean terms ajaxTogglability {
							documentation "You have to accept the terms and conditions. Otherwhise your classified will not published."
							defaultValue ^false
						}
					}
				}
			}
			variables {
				varContainer Variables {
					vars {
						intVar pageSize {
							documentation "default of items per page"
							value "20"
						},
						intVar defaultPeriod {
							documentation "Standardtage f√ºr die Laufzeit der Kleinanzeige"
							value "60"
						},
						textVar termsLink {
							documentation "here we need a link to the terms and conditions"
							value "index.php"
							maxLength 255
						},
						intVar pictureFileSize {
							documentation "the maximum filesize of the uploaded pictures (in byte, e.g. 102400 for 100kb)"
							value "204800"
						},
						intVar pictureHeight {
							documentation "maximal height of the picture"
							value "200"
						},
						intVar pictureWidth {
							documentation "maximal width of the picture"
							value "200"
						},
						intVar thumbPictureHeight {
							documentation "maximal height of the picture thumbnail"
							value "64"
						},
						intVar thumbPictureWidth {
							documentation "maximal width of the picture thumbnail"
							value "64"
						},
						filePathVar pictureDummy {
							documentation "a dummy picture if the user is not uploading one"
							value "/images/dummy.png"
						},
						boolVar useWatermark {
							documentation "you can use the wartermark option for pictures"
							value ^false
						},
						listVar typWatermark {
							documentation "choose the kind of watermark"
							value ^text
							items {
								listVarItem default ^text,
								listVarItem picture
							}
						},
						filePathVar watermarkPicture {
							documentation "the picture for the overlay as a watermark"
							value "/images/watermark.png"
						},
						textVar textWatermark {
							documentation "text for watermarking (max 15 characters)"
							value copyright
							maxLength 30
						}
					}
				}
			}
		}
	}
	controllerLayer {
		controllerContainer Controller {
			modelContext ( "Classifieds.Model" )
			processViews "Classifieds.View"
			controllers {
				adminController Admin {
					actions {
						mainAction Main,
						displayAction Display {
							documentation "shows your Classiefied"
						},
						viewAction View {
							documentation "Overview of Classiefieds"
						},
						deleteAction Delete
					}
				},
				ajaxController Ajax {
					actions {
						mainAction Main
					}
				},
				userController User {
					actions {
						mainAction Main,
						viewAction View,
						displayAction Display,
						editAction Edit
					}
				}
			}
		}
	}
	viewLayer {
		viewContainer View {
			documentation "View geht noch nicht"
			controller "Classifieds.Controller"
		}
	}
}